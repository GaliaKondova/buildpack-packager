#!/usr/bin/env ruby
require 'yaml'
require 'active_support/core_ext/hash/indifferent_access'
require 'buildpack/packager'
require 'optparse'
require 'buildpack/manifest_validator'

options = {}
usage_msg = "Usage:\n  #{File.basename(__FILE__)} online|offline"

OptionParser.new do |opts|
  opts.banner = usage_msg

  opts.on("--use-cache", "Cache depepndencies locally") do |use_cache|
    options[:cache] = use_cache
  end
end.parse!

unless ARGV.length > 0
  STDOUT.puts usage_msg
  exit 1
end

unless File.exist?('manifest.yml')
  STDERR.puts 'Could not find manifest.yml'
  exit 1
end

validator = Buildpack::ManifestValidator.new('manifest.yml')
unless validator.valid? #!errors.values.all? { |value| value.empty? }
  STDERR.puts validator.errors
  exit 1
end

manifest = YAML.load_file('manifest.yml').with_indifferent_access

manifest.merge!({
                    root_dir: `pwd`.chomp,
                    mode: ARGV[0].to_sym,
                })

manifest.merge! options

Buildpack::Packager.package(manifest)
